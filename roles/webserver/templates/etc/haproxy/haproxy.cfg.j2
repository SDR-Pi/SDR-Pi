global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&version=2.0.3&config=old&openssl=1.1.1d&hsts=false&ocsp=false&guideline=5.6
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-EC>
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	#ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

	ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE->
	ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	#ssl-default-server-options no-sslv3 no-tls-tickets
	ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

	# Make headers Case Sensitive to play nice with weird webservers
	h1-case-adjust x-forwarded-for X-Forwarded-For
	h1-case-adjust x-real-ip X-Real-IP

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

http-errors certfile
	errorfile 200 /etc/haproxy/errors/cert.http

frontend http
	bind 0.0.0.0:80
	option http-server-close
	option forwardfor
	capture request header X-Forwarded-For len 15

	acl certfile 	hdr(host) -i -m beg cert
	use_backend 	backend_certfile if certfile

	redirect scheme https code 301 if !{ ssl_fc }


frontend https
	bind 0.0.0.0:443 ssl crt /etc/haproxy/ssl/multi.pem verify none alpn http/1.1,h2
	mode http
	capture request header X-Forwarded-For len 15
	
	acl websdr 		path -i -m beg /websdr/ 	
	
	use_backend backend_websdr if websdr 
	## routing based on websocket protocol header
	acl hdr_connection_upgrade hdr(Connection)  -i upgrade
	acl hdr_upgrade_websocket  hdr(Upgrade)     -i websocket
	use_backend bk_ws if hdr_connection_upgrade hdr_upgrade_websocket

	default_backend backend_apache

backend backend_apache
	mode http
	#option forwardfor
	server apache 127.0.0.1:8080 check

backend backend_websdr
	mode http
	#option forwardfor
	http-request set-path “%[path,regsub(^/websdr/,/)]”
	
	server websdr 127.0.0.1:8073 check

backend bk_ws  
	http-request set-path “%[path,regsub(^/websdr/,/)]”
	
  	## websocket protocol validation
	acl hdr_connection_upgrade hdr(Connection)                 -i upgrade
	acl hdr_upgrade_websocket  hdr(Upgrade)                    -i websocket
	acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
	acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
	http-request deny if ! hdr_connection_upgrade ! hdr_upgrade_websocket ! hdr_websocket_key ! hdr_websocket_version
	
	## ensure our application protocol name is valid 
	## (don't forget to update the list each time you publish new applications)
  	#acl ws_valid_protocol hdr(Sec-WebSocket-Protocol) echo-protocol
  	#http-request deny if ! ws_valid_protocol

	## websocket health checking
	option httpchk GET / HTTP/1.1rnHost:\ ws.domain.comrnConnection:\ Upgrade\r\nUpgrade:\ websocket\r\nSec-WebSocket-Key:\ haproxy\r\nSec-WebSocket-Version:\ 13\r\nSec-WebSocket-Protocol:\ echo-protocol
	http-check expect status 101
	#server websrv1 192.168.10.11:8080 maxconn 30000 weight 10 cookie websrv1 check
	server websdr 127.0.0.1:8073 check

backend backend_certfile
  mode http
  #http-request set-log-level silent
  #errorfile 200 /etc/haproxy/errors/cert.http
  server websdr 127.0.0.1:81 check