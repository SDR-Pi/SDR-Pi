##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	server_name _ ; 
	return 301 https://$host$request_uri ;
}

server {
	# SSL configuration
	
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	
	gzip off;

	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	
	include snippets/sdr-pi-ssl.conf;
    
	location = /websdr {
		return 301 /websdr/;
	}

	location = /login {
		return 301 /websdr/login?ref=settings;
	}

    # Configure for websdr
    location /websdr/ {
		rewrite /websdr/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8073/;
        proxy_http_version 1.1;
		proxy_buffering off;

		# required for websockets
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection;

        # Forward client connect to back end proxy.
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # client_max_body_size 0;
        # proxy_connect_timeout  3600s;
        # proxy_read_timeout  3600s;
        # proxy_send_timeout  3600s;
        # send_timeout  3600s;
    }

	location = /bettercap {
		return 301 /bettercap/;
	}

	# Configure for bettercap
    location /bettercap/ {
		rewrite /bettercap/(.*) /$1  break;
        proxy_pass http://127.0.0.1:{{ bettercap_http_server_port }}/;
        proxy_http_version 1.1;
		proxy_buffering off;

		# required for websockets
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection;

        # Forward client connect to back end proxy.
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # client_max_body_size 0;
        # proxy_connect_timeout  3600s;
        # proxy_read_timeout  3600s;
        # proxy_send_timeout  3600s;
        # send_timeout  3600s;
    }

    # Default to Apache on http-alt
	set $upstream 127.0.0.1:8080;

	location / {
		proxy_pass http://$upstream;
		proxy_http_version 1.1;
		proxy_buffering off;

		# required for websockets
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection;

        # Forward client connect to back end proxy.
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

	}
}

server {
    listen 80;
    listen [::]:80;

    server_name cert cert.* ;

    location / { 
		rewrite ^ /cert.pem break;
    }
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
