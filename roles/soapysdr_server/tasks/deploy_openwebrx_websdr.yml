---
- name: (SoapySDR - OpenWebRx) - Import GPG Key
  apt_key:
    url: https://repo.openwebrx.de/debian/key.gpg.txt
    state: present

- name: (SoapySDR - OpenWebRx) - Import Apt-Repo
  apt_repository:
    repo: deb https://repo.openwebrx.de/debian/ bullseye main
    state: present
    filename: openwebrx

- name: (SoapySDR - OpenWebRx) - Import Apt-Repo
  apt_repository:
    repo: deb https://repo.openwebrx.de/debian/ experimental main
    state: present
    filename: openwebrx

- name: (SoapySDR - OpenWebRx) - Set the password for the OpenWebRx admin user
  debconf: 
    name: openwebrx 
    question: openwebrx/admin_user_password
    vtype: string 
    value: "{{ openwebrx_admin_password }}"

- name: (SoapySDR - OpenWebRx) - Install OpenWebRx Packages
  apt:
    pkg:
      - openwebrx
      - soapy-connector
      - owrx-connector
      - digiham
      - python3-digiham
    update_cache: yes
  become: yes
  async: 3600
  poll: 0
  register: openwebrx_install

- name: (SoapySDR - OpenWebRx) - Check on install progress
  async_status:
    jid: "{{ openwebrx_install.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 360
  delay: 10

- name: (SoapySDR - OpenWebRx) - Deploy custom SystemD unit for openwebrx
  template:
   src: lib/systemd/system/openwebrx.service.j2
   dest: /lib/systemd/system/openwebrx.service

- name: (SoapySDR - OpenWebRx) - Explicitly run Enable to manage system.wants syntax
  command: "systemctl enable openwebrx"
  args: 
    creates: "/etc/systemd/system/soapyremote-server.service.wants/openwebrx.service"
  become: yes
  
- name: (SoapySDR - OpenWebRx) - Deploy custom settings file for openwebrx
  template:
   src: var/lib/openwebrx/settings.json.j2
   dest: /var/lib/openwebrx/settings.json

- name: (SoapySDR - OpenWebRx) - Reload and restart openwebrx
  systemd:
    daemon_reload: yes
    name: openwebrx
    enabled: yes
    state: restarted